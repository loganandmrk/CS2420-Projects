lyst1 = [1,2,3,4,5,6]
lyst2 = [2,6,3,2,3,8,7]


def is_sorted(lyst):
    #if lyst is sorted return True if not return False
    
    if (isinstance(lyst, list) and all(isinstance(i, int) for i in lyst)):
        if all(lyst[i] <= lyst[i + 1] for i in range(len(lyst) - 1)):
            return True
        else:
            return False
    else:
        raise TypeError("Data must be a list containing only integers.")
    
def quicksort(lyst):
    num_swap = 0
    num_comp = 0
    
    if not is_sorted(lyst):
        
        def partition(lyst, low, high):
            pivot = lyst[len(lyst)//2]
            done = False
            while not done:
                while (lyst[low] < pivot):
                    low += 1
                    print("increase low")
                
                while (pivot < lyst[high]):
                    high -= 1
                    print("decrease high")
                    
                if low >= high:
                    print("high and low have passed each other")
                    done = True
                else:
                    print("Swapped low and high")
                    temp = lyst[low]
                    lyst[low] = lyst[high]
                    lyst[high] = temp
                    low += 1
                    high -= 1
            
            
        partition(lyst, 0, len(lyst)-1)
        
        return lyst, num_comp, num_swap

def selection_sort(lyst):
    if not is_sorted(lyst):
        pass

def insertion_sort(lyst):
    if not is_sorted(lyst):
        pass
    
def mergesort(lyst):
    if not is_sorted(lyst):
        pass

def main():
    print(quicksort(lyst2))

if __name__ == "__main__":
    main()